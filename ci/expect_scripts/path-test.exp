#!/usr/bin/expect

# uncomment line below for debugging
# exp_internal 1

set timeout 7

source ./ci/expect_scripts/shared-code.exp

spawn $env(TESTS_DIR)path-test

set expected_output [normalize_output "
Testing Path functions...
This will create and manipulate test files and directories in the current directory.

Testing Path.from_bytes and Path.with_extension:
Created path from bytes: test_path
Path.from_bytes result matches expected: Bool.true
Path with extension: test_file.txt
Extension added correctly: Bool.true
Path with dot and extension: test_file.json
Extension after dot: Bool.true
Path with replaced extension: test_file.new
Extension replaced: Bool.true

Testing Path file operations:
Bytes written: \\\[72, 101, 108, 108, 111, 44, 32, 80, 97, 116, 104, 33\\\]
Bytes read: \\\[72, 101, 108, 108, 111, 44, 32, 80, 97, 116, 104, 33\\\]
Bytes match: Bool.true
File content via cat: Hello from Path module! ðŸš€
UTF-8 written: Hello from Path module! ðŸš€
UTF-8 read: Hello from Path module! ðŸš€
UTF-8 content matches: Bool.true
JSON content: {\"message\":\"Path test\",\"numbers\":\\\[1,2,3\\\]}
JSON contains 'message' field: Bool.true
JSON contains 'numbers' field: Bool.true
File no longer exists: Bool.true

Testing Path directory operations...
Nested directory structure:
test_parent
test_parent/test_child
test_parent/test_child/test_grandchild

Number of directories created: 3
Directory contents:
total \\d+
d.* \\.
d.* \\.\\.
-.* file1\\.txt
-.* file2\\.txt
d.* subdir

Empty dir was deleted: Bool.true
Size before delete_all:\\s*\\d+\\w*\\s*test_parent

Parent dir no longer exists: Bool.true

Testing Path.hard_link!:
Hard link count before: 1
Hard link count after: 2
Original content: Original content for Path hard link test
Link content: Original content for Path hard link test
Content matches: Bool.true
Inode information:
\\d+ .* test_path_hardlink\\.txt
\\d+ .* test_path_original\\.txt

First file inode: \\\[\"\\d+\"\\\]
Second file inode: \\\[\"\\d+\"\\\]
Inodes are equal: Bool.true

Testing Path.rename!:
âœ“ Original file no longer exists
âœ“ Renamed file exists
âœ“ Renamed file has correct content

Testing Path.exists!:
âœ“ Path.exists! returns true for a file that exists
âœ“ Path.exists! returns false for a file that does not exist

I ran all Path function tests.

Cleaning up test files...
Files to clean up:
-.* test_path_bytes\\.txt
-.* test_path_hardlink\\.txt
-.* test_path_json\\.json
-.* test_path_original\\.txt
-.* test_path_rename_new\\.txt
-.* test_path_utf8\\.txt

ls: .*
ls: .*
ls: .*
ls: .*
ls: .*
ls: .*
Files deleted successfully: Bool.true
"]

expect -re $expected_output {
    expect eof {
        check_exit_and_segfault
    }  
}

puts stderr "\nExpect script failed: output was not as expected. Diff the output with expected_output in this script. Alternatively, uncomment `exp_internal 1` to debug."
exit 1